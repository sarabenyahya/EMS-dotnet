@inject EmployeesClient EmployeesClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer



<!-- Modal -->
<div class="modal fade" id="@(GetModalId(employee))" data-bs-keyboard="false" data-bs-backdrop="static"  tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header alert alert-danger">
        <h1 class="modal-title fs-5 " id="deleteModal-@employee!.Id-Label">Confirmation de la suppression </h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body pb-3">
        <div class="d-flex align-items-center">
            <i class="bi bi-exclamation-octagon text-danger-emphasis" style="font-size: 5rem;"></i> 
            <div class="ms-5 text-start" style="width: 600px">
                <div class="mb-3">Vous êtes sûr de supprimer l'employé: </div>
                <table class="table table-light shadow-sm">
                <thead>
                    <tr><th>Id</th> <th>Nom</th></tr>
                </thead>
                <tbody>
                    <tr><td>@employee.Id</td> <td>@employee.Name</td></tr>
                </tbody>
                </table>
            
            </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Annuler</button>
        <button type="button" @onclick="HandleDeleteAsync"  class="btn btn-outline-danger" data-bs-dismiss="modal">Supprimer</button>
      </div>
    </div>
  </div>
</div>

@code {
    [Parameter]
    public EmployeeSummary? employee { get; set; }

    [Parameter]
    public EventCallback<int> OnEmployeeDeleted { get; set; } // Event to notify deletion

    private async Task HandleDeleteAsync()
    {
        await EmployeesClient.DeleteEmployeeAsync(employee!.Id);
        await OnEmployeeDeleted.InvokeAsync(employee.Id); // Notify subscriber
       
    }

    public static string GetModalId(EmployeeSummary? employee)
    {
      ArgumentNullException.ThrowIfNull(employee);
      return $"deleteModal-{employee.Id}";
    }
}